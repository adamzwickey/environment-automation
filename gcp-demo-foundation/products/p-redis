---
product-name: p-redis
network-properties:
  network: ((redis.networks.network))
  service_network: ((redis.networks.services_network))
  other_availability_zones: ((redis.networks.other_availability_zones))
  singleton_availability_zone: ((redis.networks.singleton_availability_zone))
product-properties:
  .cf-redis-broker.service_instance_limit:
    value: ((redis.shared.limits))
  .properties.syslog_selector:
    value: "No"
  .properties.small_plan_selector.active.az_multi_select:
    value: ((redis.small_plan.az_placement))
  .properties.medium_plan_selector.active.az_multi_select:
    value: ((redis.medium_plan.az_placement))
  .properties.large_plan_selector.active.az_multi_select:
    value: ((redis.large_plan.az_placement))
errand-config:
  broker-deregistrar:
    pre-delete-state: ((redis.errand_config.broker-deregistrar))
  broker-registrar:
    post-deploy-state: ((redis.errand_config.broker-registrar))
  delete-all-service-instances-and-deregister-broker:
    pre-delete-state: ((redis.errand_config.delete-all-service-instances-and-deregister-broker))
  on-demand-broker-smoke-tests:
    post-deploy-state: ((redis.errand_config.on-demand-broker-smoke-tests))
  register-broker:
    post-deploy-state: ((redis.errand_config.register-broker))
  smoke-tests:
    post-deploy-state: ((redis.errand_config.smoke-tests))
  upgrade-all-service-instances:
    post-deploy-state: ((redis.errand_config.upgrade-all-service-instances))
  orphan-deployments:
    post-deploy-state: ((redis.errand_config.orphan-deployments))
  recreate-all-service-instances:
    post-deploy-state: ((redis.errand_config.recreate-all-service-instances))
