groups:
- name: full-pcf
  jobs:
  - bootstrap-terraform-state
  - create-infrastructure
  - wipe-env
- name: infrastructure
  jobs:
  - bootstrap-terraform-state
  - create-infrastructure
  - wipe-env

resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final
resource_types:
- name: gcs-resource
  type: docker-image
  source:
    repository: frodenas/gcs-resource

resources:
- name: terraform-state
  type: gcs-resource
  source:
    bucket: ((state-bucket))
    json_key: ((google-json-key))
    versioned_file: terraform.tfstate
- name: environment-automation
  type: git
  source:
    uri: git@github.com:azwickey-pivotal/environment-automation.git
    branch: master
    private_key: ((github-key))

jobs:
- name: bootstrap-terraform-state
  serial: true
  plan:
  - get: environment-automation
  - task: create-terraform-state
    params:
      TERRAFORM_STATEFILE_BUCKET: ((state-bucket))
      GCP_SERVICE_ACCOUNT_KEY: ((google-json-key))
    file: environment-automation/tasks/create-initial-terraform-state/task.yml

- name: wipe-env
  serial_groups: [terraform]
  ensure:
    put: terraform-state
    params:
      file: wipe-output/*.tfstate
  plan:
  - aggregate:
    - get: environment-automation
    - get: terraform-state
  - task: wipe
    file: environment-automation/tasks/wipe-env/task.yml
    params:
      GCP_PROJECT_ID: ((gcp_project_id))
      GCP_REGION: ((gcp_region))
      GCP_SERVICE_ACCOUNT_KEY: ((google-json-key))

- name: create-infrastructure
  serial_groups: [terraform]
  ensure:
    put: terraform-state
    params:
      file: create-infrastructure-output/*.tfstate
  plan:
  - aggregate:
    - get: terraform-state
    - get: environment-automation
  - task: create-infrastructure
    file: environment-automation/tasks/create-infrastructure/task.yml
    params:
      GCP_PROJECT_ID: ((gcp_project_id))
      GCP_REGION: ((gcp_region))
      GCP_SERVICE_ACCOUNT_KEY: ((google-json-key))
